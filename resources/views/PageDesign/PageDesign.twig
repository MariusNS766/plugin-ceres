{% import "Ceres::PageDesign.Macros.IncludeComponents" as Loader %}
{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}
{% import "Ceres::PageDesign.Macros.Translations" as Translations %}
{{ component( "Ceres::PageDesign.Components.Notifications" ) }}
{{ component( "Ceres::PageDesign.Components.Popper" ) }}
{{ component( "Ceres::Customer.Components.ForgotPassword" ) }}

{% if isShopBuilder %}
    {% include "Ceres::Widgets.WidgetComponents" %}
{% endif %}

{% set currencyFormat = config("Ceres.currency.format") %}
{% set defaultLanguage = webstoreConfig.defaultLanguage %}

<!DOCTYPE html>

<html lang="{{ lang }}" data-framework="vue" prefix="og: http://ogp.me/ns#" class="icons-loading">

<head>
    {{ get_consent_scripts(ceresConfig.global.blockCookies) }}

    {% include getPartial('head') %}

    {% block PartialHead %}
        {% embed getPartial('page-metadata') %}{% endembed %}
    {% endblock %}

    {% for styleTemplate in get_additional_styles() %}
        {% include styleTemplate.path ignore missing with styleTemplate.params %}
    {% endfor %}

    {% if assetName == 'ceres-checkout' %}
        {{ LayoutContainer.show("Ceres::Checkout.Styles") }}
    {% endif %}
    {% if services.template.getCurrentTemplate() == "tpl.item" %}
        {{ LayoutContainer.show("Ceres::SingleItem.Styles") }}
    {% endif %}
</head>

<body class="{{ bodyClasses | join(' ') }} {% if request.get('openBasketPreview') == 1 %} basket-open{% endif %}">

{{ LayoutContainer.show("Ceres::PageDesign.AfterOpeningBodyTag") }}

<script>
    if('ontouchstart' in document.documentElement)
    {
        document.body.classList.add("touch");
    }
    else
    {
        document.body.classList.add("no-touch");
    }
</script>

<div id="vue-app" class="app">
    <!-- messages -->
    <notifications template="#vue-notifications" :initial-notifications="{{ notifications | json_encode() }}"></notifications>

    {% include getPartial('header') %}

    <div id="page-body" class="main">
        {% block PageBody %}{% endblock %}
    </div>

    {% include getPartial('footer') %}

    {% block PartialFooter %}{% endblock %}

    <!-- LOGIN MODAL -->
    <div id="login-modal-wrapper">
        <div class="modal fade login-modal" id="login" tabindex="-1" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title h3">{{ trans("Ceres::Template.login") }}</div>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <lazy-load component="login-modal">
                        <login modal-element="login-modal-wrapper">
                            <template #extend-overlay-buttons>
                                {{ LayoutContainer.show("Ceres::LoginOverlay.ExtendOverlayButtons") }}
                            </template>
                        </login>
                    </lazy-load>
                </div>
            </div>
        </div>
    </div>
    <!-- ./LOGIN MODAL -->

    <!-- REGISTRATION MODAL -->
    <div id="simple-registration-modal-wrapper">
        <div class="modal fade" id="registration" tabindex="-1" role="dialog">
            <div class="modal-dialog">
                <lazy-load component="register-modal">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="modal-title h3">
                                {{ trans("Ceres::Template.regCreateAccount") }}

                            </div>

                            <popper v-cloak class="ml-auto">
                                <template #handle>
                                    <button class="btn btn-icon btn-secondary btn-sm">
                                        <i class="fa fa-info"></i>
                                    </button>
                                </template>
                                <template #title>
                                    {{ trans("Ceres::Template.regContactInformations") }}
                                </template>
                                <template #content>
                                    <ul class='pl-3'>
                                        <li class='mb-3'>{{ trans('Ceres::Template.regContactInfoText1') }}</li>
                                        <li class='mb-3'>{{ trans('Ceres::Template.regContactInfoText2') }}</li>
                                        <li class='mb-3'>{{ trans('Ceres::Template.regContactInfoText3') }}</li>
                                        <li>{{ trans('Ceres::Template.regContactInfoText4') }}</li>
                                    </ul>
                                </template>
                            </popper>

                            <button type="button" class="close ml-0" data-dismiss="modal" aria-hidden="true">&times;</button>
                        </div>
                        <div class="modal-body">
                            <registration :is-simple-registration="true" modal-element="simple-registration-modal-wrapper">
                                <template #extend-overlay-buttons>
                                    {{ LayoutContainer.show("Ceres::RegistrationOverlay.ExtendOverlayButtons") }}
                                </template>
                                <template #custom-address-fields>
                                    {{ LayoutContainer.show("Ceres::Checkout.CustomAddressField") }}
                                </template>
                            </registration>
                        </div>
                    </div>
                </lazy-load>
            </div>
        </div>
    </div>
    <!-- ./REGISTRATION MODAL -->

    <!-- BASKET MODAL -->
    <lazy-load component="add-item-to-basket-overlay">
        <add-item-to-basket-overlay>
            <template slot="extendOverlayButtons">
                {{ LayoutContainer.show("Ceres::Basket.ExtendOverlayButtons") }}
            </template>
        </add-item-to-basket-overlay>
    </lazy-load>
    <!-- ./BASKET MODAL -->

    <!-- PASSWORD RESET MODAL -->
    <lazy-load component="forgot-password-modal">
        <forgot-password-modal :current-template="{{ services.template.getCurrentTemplate() | json_encode }}">
            <template slot="extendOverlayButtons">
                {{ LayoutContainer.show("Ceres::LoginOverlay.ExtendOverlayButtons") }}
            </template>
        </forgot-password-modal>
    </lazy-load>
    <!-- ./PASSWORD RESET MODAL -->

    <!-- SHIPPINGCOSTS MODAL -->
    {% if ceresConfig.global.shippingCostsCategoryId > 0 %}
    <div id="shippingscosts-modal-wrapper">
        <div class="modal fade" id="shippingscosts" tabindex="-1" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title h3">{{ trans('Ceres::Template.shippingInfoCosts') }}</div>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body">
                        {% set shopBuilderShippingTemplate = shop_builder_category_template(ceresConfig.global.shippingCostsCategoryId) %}
                        {% if shopBuilderShippingTemplate | trim is not empty %}
                            {{ shopBuilderShippingTemplate | raw }}
                        {% else %}
                            {% include category_template(ceresConfig.global.shippingCostsCategoryId, lang, webstoreConfig.webstoreId) ignore missing %}
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </div>
    {% endif %}
    <!-- ./SHIPPINGCOSTS MODAL -->
</div>

<script>
    App = {
        config: {{ ceresConfig | json_encode | raw }},
        urls: {{ urls | json_encode | raw }},
        activeCurrency: "{{ currencyData[currencyFormat] }}",
        currencyPattern: {{  services.checkout.getCurrencyPattern() | json_encode | raw }},
        isCategoryView: {% if services.template.isCategory() == "1" %}true{% else %}false{% endif %},
        isCheckoutView : {% if services.template.isCheckout() == "1" %}true{% else %}false{% endif %},
        isSearch: {% if services.template.isSearch() == "1" %}true{% else %}false{% endif %},
        isItemView: {% if services.template.getCurrentTemplate() == "tpl.item" %}true{% else %}false{% endif %},
        templateEvent: "{{ templateEvent }}",
        templateType: "{{ urls.templateType }}",
        language: "{{ lang }}",
        defaultLanguage: "{{ defaultLanguage }}",
        decimalSeparator: "{{ config("IO.format.separator_decimal") }}",
        urlTrailingSlash: {{ urls.appendTrailingSlash | json_encode }},
        propertyFileUrl: "{{ services.propertyFile.getPropertyFileUrl() }}",
        isShopBuilder: {{ isShopBuilder | default(false) | json_encode }},
        bundleSetting: {{ webstoreConfig.dontSplitItemBundle | default(1) }},
        initialPleaseSelect: {{ webstoreConfig.attributeSelectDefaultOption | default(0) }},
        publicPath: "{{ plugin_path('Ceres') ~ '/js/dist/' }}",
        isCheapestSorting: "{{ services.template.isCheapestSorting() }}",
        initialData: {
            shippingCountries: {{ services.country.getActiveCountriesList() | filterFields(["id", "currLangName", "isoCode2", "states.id", "states.name"]) | json_encode | raw }},
            shippingCountryId: {{ services.checkout.getShippingCountryId() }},
            showNetPrices: {{ showNetPrices | json_encode }}
        },
        features: {}
    };
</script>

{{ Loader.include_components() }}

{{ LayoutContainer.show("Ceres::Script.Loader") }}

{{ Translations.add( "Ceres", "Template" ) }}

{{ get_json_data() }}

{% if ceresConfig.log.performanceLevel  == 'development' %}
    {# Browsers with ES module support load this file. #}
    <script id="modern-ceres-bundle" data-src="{{ plugin_path('Ceres') }}/js/dist/modern/{{ assetName }}.js?v={{ buildHash }}"></script>
    {# Older browsers load this file (and module-supporting browsers know *not* to load this file). #}
    <script id="legacy-ceres-bundle" data-src="{{ plugin_path('Ceres') }}/js/dist/legacy/{{ assetName }}.js?v={{ buildHash }}"></script>
{% else %}
    {# Browsers with ES module support load this file. #}
    <script id="modern-ceres-bundle" data-src="{{ plugin_path('Ceres') }}/js/dist/modern/{{ assetName }}.min.js?v={{ buildHash }}"></script>
    {# Older browsers load this file (and module-supporting browsers know *not* to load this file). #}
    <script id="legacy-ceres-bundle" data-src="{{ plugin_path('Ceres') }}/js/dist/legacy/{{ assetName }}.min.js?v={{ buildHash }}"></script>
{% endif %}

<script>
    function getBrowserInfo() {
        var ua= navigator.userAgent, tem, 
        M= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
        if(/trident/i.test(M[1])){
            tem=  /\brv[ :]+(\d+)/g.exec(ua) || [];
            return 'IE '+(tem[1] || '');
        }
        if(M[1]=== 'Chrome'){
            tem= ua.match(/\b(OPR|Edge)\/(\d+)/);
            if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera');
        }
        M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];
        if((tem= ua.match(/version\/(\d+)/i))!= null) M.splice(1, 1, tem[1]);
        return M.join(' ');
    };
    var browserInfos = getBrowserInfo().split(" ");
    var browser = {name: browserInfos[0], version: Number(browserInfos[1] || 0)};
    var supportedBrowsers = [{name:"Chrome",version:58}, {name:"Firefox",version:53}, {name:"Edge",version:15}, {name:"iOS",version:53}, {name:"Safari",version:11}];
    var scriptToLoad = "legacy";
    for (var i=0;supportedBrowsers.length > i;i++){
        if(supportedBrowsers[i].name === browser.name && browser.version >= supportedBrowsers[i].version) {
            scriptToLoad = "modern";
            break;
        }
    }
    var scriptTag = document.getElementById(scriptToLoad+"-ceres-bundle");
    var newScriptTag = document.createElement("script");
    newScriptTag.src = scriptTag.dataset.src;
    scriptTag.parentNode.append(newScriptTag);
</script>

{# <script src="/documents/plugins/Ceres/resources/js/dist/modern/ceres-base.js?v=5f49fd8b3c069fd18900d23b032e0346e0378476"></script> #}

{% for scriptTemplate in get_additional_scripts() %}
    {% include scriptTemplate.path ignore missing with scriptTemplate.params %}
{% endfor %}

{% if isShopBuilder %}
    {% include "Ceres::Widgets.ShopBuilderDataStore" %}
{% endif %}

{{ LayoutContainer.show("Ceres::Script.AfterScriptsLoaded") }}

{% if assetName == 'ceres-checkout' %}
    {{ LayoutContainer.show("Ceres::Checkout.AfterScriptsLoaded") }}
{% endif %}
{% if services.template.getCurrentTemplate() == "tpl.item" %}
    {{ LayoutContainer.show("Ceres::SingleItem.AfterScriptsLoaded") }}
{% endif %}

<script>
    window.__loadPluginChunk = function(source) {
        return source += "?v={{ buildHash }}";
    };

    window.vueEventHub = new Vue();

    if (App.config.log.checkSyntax)
    {
        var rootElement = document.getElementById("vue-app");

        rootElement.innerHTML = rootElement.innerHTML.replace(/(?:^|\s)(?::|v-bind:)\S+=(?:""|'')/g, "");

        window.vueApp = new Vue({
            store: window.ceresStore
        });

        vueApp.$mount( rootElement.cloneNode(true) );

        if (vueApp.$el.id === "vue-app")
        {
            document.body.replaceChild( vueApp.$el, rootElement );
        }
    }
    else
    {
        // eslint-disable-next-line no-unused-vars
        window.vueApp = new Vue({
            el: "#vue-app",
            store: window.ceresStore
        });
    }

    {% if request.get("openBasketPreview") == 1 %}window.ceresStore.dispatch("loadComponent", "basket-preview"){% endif %}
</script>

{{ get_filtered_tags() }}

{{ get_shop_builder_scripts( "latest", ceresConfig.log.performanceLevel == 'live') }}

{% if not services.template.shouldBeCached() %}
    <input type="hidden" id="csrf-token" value="{{ csrf_token() }}">
{% endif %}

</body>
</html>
